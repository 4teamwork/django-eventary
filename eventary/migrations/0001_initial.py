# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-15 12:56
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),
                ('view_limit', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='cal/images/%Y/%m/%d')),
                ('document', models.FileField(blank=True, null=True, upload_to='cal/documents/%Y/%m/%d')),
                ('host', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('published', models.BooleanField(verbose_name='publication status')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('proposed', models.DateField(auto_now_add=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='comment')),
                ('prize', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='prize')),
                ('recurring', models.BooleanField(default=False, verbose_name='recurring event')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventary.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='EventTimeDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='start time')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='end time')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='comment')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventary.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('events', models.ManyToManyField(blank=True, to='eventary.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Grouping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('calendars', models.ManyToManyField(blank=True, to='eventary.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='GroupingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('organization', models.CharField(max_length=49, verbose_name='hosting organization')),
                ('phone', models.CharField(max_length=19)),
                ('homepage', models.URLField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('calls', models.IntegerField(default=0)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('last_call', models.DateField(null=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='eventary.Event')),
            ],
        ),
        migrations.AddField(
            model_name='grouping',
            name='grouping_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventary.GroupingType'),
        ),
        migrations.AddField(
            model_name='group',
            name='grouping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eventary.Grouping'),
        ),
    ]
